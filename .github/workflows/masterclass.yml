name: Fast-API CI
on:
  push:
    branches: [ master ]
  # pull_request:
  #   branches: [ master ]
env:
  dockerhub_id: ulrichsteve
  dockerhub_repository: fastapi
  dockerhub_latest: latest
  container: webinar
permissions:
  security-events: write
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Test python Code
      run: | 
        pip3 install -r requirements.txt 
        cd app/

  # secure:
  #   needs: test
  #   name: Microsoft Security DevOps Analysis
  #   # MSDO runs on windows-latest.
  #   # ubuntu-latest also supported
  #   runs-on: windows-latest
  #   steps:
  #     # Checkout your code repository to scan
  #   - uses: actions/checkout@v3
  #     # Run analyzers
  #   - name: Run Microsoft Security DevOps Analysis
  #     uses: microsoft/security-devops-action@latest
  #     id: msdo
  #     with:
  #       policy: 'GitHub'
  #     # config: string. Optional. A file path to an MSDO configuration file ('*.gdnconfig').
  #     # policy: 'GitHub' | 'microsoft' | 'none'. Optional. The name of a well-known Microsoft policy. If no configuration file or list of tools is provided, the policy may instruct MSDO which tools to run. Default: GitHub.
  #     # categories: string. Optional. A comma-separated list of analyzer categories to run. Values: 'secrets', 'code', 'artifacts', 'IaC', 'containers. Example: 'IaC,secrets'. Defaults to all.
  #     # languages: string. Optional. A comma-separated list of languages to analyze. Example: 'javascript,typescript'. Defaults to all.
  #     # tools: string. Optional. A comma-separated list of analyzer tools to run. Values: 'bandit', 'binskim', 'eslint', 'templateanalyzer', 'terrascan', 'trivy'.

    
  build-push-container:
    # needs: secure
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: | 
        docker build -t $dockerhub_id/$dockerhub_repository:${GITHUB_SHA} .
        docker tag  $dockerhub_id/$dockerhub_repository:${GITHUB_SHA} $dockerhub_id/$dockerhub_repository:$dockerhub_latest
        docker images
        docker run -d -p 80:80 --name $container $dockerhub_id/$dockerhub_repository:${GITHUB_SHA}
        sleep 10
        curl localhost 
        docker login -u ${{ secrets.REGISTRY_USER  }} -p ${{ secrets.REGISTRY_PASSWD  }}
        docker push $dockerhub_id/$dockerhub_repository:${GITHUB_SHA}
        docker push $dockerhub_id/$dockerhub_repository:$dockerhub_latest
  update-push:
    needs: build-push-container
    name: Clone update and Push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup SSH
      uses: MrSquaare/ssh-setup-action@v1
      with:
          host: github.com
          private-key: ${{ secrets.PRIVATE_KEY }}
          
    - name: Clone repository
      run: |
        rm -Rf *
        git clone git@github.com:ulrich-sun/gitops-manifests.git
        ls
        cd gitops-manifests/
        cat values.yaml
        sed -i "s+tag.*+tag: ${GITHUB_SHA}+g" values.yaml
        cat values.yaml
    - name: Commit and push changes
      run: |
        ls
        cd gitops-manifests
        git config --global user.name "ulrich-sun"
        git config --global user.email "ulrichnoumsi98@gmail.com"
        git add -A
        git commit -m "mis Ã  jour de l'image avec le tag ${GITHUB_SHA}"
        git push origin master
